<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Network Automation GR</title>
        <link>https://netautogr.github.io/posts/</link>
        <description>Recent content in Posts on Network Automation GR</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 02 Dec 2020 20:37:49 +0200</lastBuildDate>
        <atom:link href="https://netautogr.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Lalala</title>
            <link>https://netautogr.github.io/posts/2020/12/lalala/</link>
            <pubDate>Wed, 02 Dec 2020 20:37:49 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/12/lalala/</guid>
            <description>LALALALALA code snippet code snippet code snippet </description>
            <content type="html"><![CDATA[<h1 id="lalalalala">LALALALALA</h1>
<pre><code>code snippet
code snippet
code snippet
</code></pre>]]></content>
        </item>
        
        <item>
            <title>EEM monitor interface stats</title>
            <link>https://netautogr.github.io/posts/2020/11/eem-monitor-interface-stats/</link>
            <pubDate>Thu, 26 Nov 2020 01:28:49 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/11/eem-monitor-interface-stats/</guid>
            <description>The following applet is triggered whenever the transmit rate on the given interface falls below the configured threshold.
event manager applet speaker_monitor_Gi7/0/9 authorization bypass event interface name GigabitEthernet7/0/9 parameter transmit_rate_bps entry-op le entry-val 1500000 entry-type value poll-interval 120 action 1.01 syslog msg &amp;quot;------ EEM GENERATED MESSAGE ---------&amp;quot; action 1.02 syslog msg &amp;quot;----- SPEAKER RECEIVE RATE UNDER 1.5Mbps DETECTED ----&amp;quot; action 1.03 cli command &amp;quot;enable&amp;quot; action 1.05 cli command &amp;quot;configure terminal&amp;quot; action 1.</description>
            <content type="html"><![CDATA[<p>The following applet is triggered whenever the transmit rate on the given interface falls below the configured threshold.</p>
<pre><code>event manager applet speaker_monitor_Gi7/0/9 authorization bypass
event interface name GigabitEthernet7/0/9 parameter transmit_rate_bps entry-op le entry-val 1500000 entry-type value poll-interval 120
action 1.01 syslog msg &quot;------ EEM GENERATED MESSAGE ---------&quot;
action 1.02 syslog msg &quot;----- SPEAKER RECEIVE RATE UNDER 1.5Mbps DETECTED ----&quot;
action 1.03 cli command &quot;enable&quot;
action 1.05 cli command &quot;configure terminal&quot;
action 1.07 cli command &quot;interface GigabitEthernet7/0/9&quot;
action 1.08 cli command &quot;shutdown&quot;
action 1.09 wait 5
action 1.10 cli command &quot;no shutdown&quot;
action 2 mail server &quot;$_email_server&quot; to &quot;$_email_to&quot; from &quot;$_email_from&quot; subject &quot;Dante Speaker was rebooted&quot; body &quot;Dante Speaker on port GigabitEthernet7/0/9 was rebooted due to not receiving multicast audio stream.&quot;
</code></pre><p><em>courtesy of Chris Partsenidis</em></p>
]]></content>
        </item>
        
        <item>
            <title>EEM monitor traffic</title>
            <link>https://netautogr.github.io/posts/2020/11/eem-monitor-traffic/</link>
            <pubDate>Thu, 26 Nov 2020 01:25:46 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/11/eem-monitor-traffic/</guid>
            <description>The two below applets monitor Upload and Download traffic on specific interfaces. When they exceed 7Mbps for more than 180 seconds (3 minutes), it will execute the configured commands, capture the output and email it to me. Very useful for monitoring WAN links.
event manager applet wan-download_monitor authorization bypass event interface name GigabitEthernet0/1 parameter receive_rate_bps entry-op ge entry-val 7000000 entry-type increment poll-interval 180 action 1.01 syslog msg &amp;quot;------ EEM GENERATED MESSAGE ---------&amp;quot; action 1.</description>
            <content type="html"><![CDATA[<p>The two below applets monitor Upload and Download traffic on specific interfaces. When they exceed 7Mbps for more than 180 seconds (3 minutes), it will execute the configured commands, capture the output and email it to me. Very useful for monitoring WAN links.</p>
<pre><code>event manager applet wan-download_monitor authorization bypass
event interface name GigabitEthernet0/1 parameter receive_rate_bps entry-op ge entry-val 7000000 entry-type increment poll-interval 180
action 1.01 syslog msg &quot;------ EEM GENERATED MESSAGE ---------&quot;
action 1.02 syslog msg &quot;----- HIGH DOWNLOAD RATE DETECTED ----&quot;
action 1.03 cli command &quot;enable&quot;
action 1.04 set result &quot;&quot;
action 1.05 cli command &quot;show ip flow top-talkers&quot;
action 1.06 append result &quot;$_cli_result&quot;
action 1.07 cli command &quot;show interface gig 0/1&quot;
action 1.08 append result &quot;$_cli_result&quot;
action 2 mail server &quot;$_email_server&quot; to &quot;$_email_to&quot; from &quot;$_email_from&quot; subject &quot;High Download Rate Detected&quot; body &quot;Router has detected high Download rate exceeding 7 Mbps for over 4 minutes: $result&quot;
</code></pre><pre><code>event manager applet wan-upload_monitor authorization bypass
event interface name GigabitEthernet0/1 parameter transmit_rate_bps entry-op ge entry-val 7000000 entry-type increment poll-interval 180
action 1.01 syslog msg &quot;------ EEM GENERATED MESSAGE ---------&quot;
action 1.02 syslog msg &quot;----- HIGH UPLOAD RATE DETECTED ----&quot;
action 1.03 cli command &quot;enable&quot;
action 1.04 set result &quot;&quot;
action 1.05 cli command &quot;show ip flow top-talkers&quot;
action 1.06 append result &quot;$_cli_result&quot;
action 1.07 cli command &quot;show interface gig 0/1&quot;
action 1.08 append result &quot;$_cli_result&quot;
action 2 mail server &quot;$_email_server&quot; to &quot;$_email_to&quot; from &quot;$_email_from&quot; subject &quot;High Upload Rate Detected&quot; body &quot;Router has detected high Upload rate exceeding 7 Mbps for over 4 minutes: $result&quot;
</code></pre><p><em>courtesy of Chris Partsenidis</em></p>
]]></content>
        </item>
        
        <item>
            <title>EEM monitor environment</title>
            <link>https://netautogr.github.io/posts/2020/11/eem-monitor-environment/</link>
            <pubDate>Thu, 26 Nov 2020 01:24:34 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/11/eem-monitor-environment/</guid>
            <description>The following applet is triggered whenever there is a system environment message (%ENVMON) generated in the device&amp;rsquo;s syslog. E.g high temperature, failed power supply etc. As soon as EEM &amp;ldquo;sees&amp;rdquo; %ENVMON messages, it will execute the below commands, capture the output and email it to me:
event manager applet env_monitor authorization bypass event syslog pattern &amp;quot;%ENVMON&amp;quot; action 1.01 syslog msg &amp;quot;------ EEM GENERATED MESSAGE ---------&amp;quot; action 1.02 syslog msg &amp;quot;------ENVIRONMENT PROBLEM DETECTED----&amp;quot; action 1.</description>
            <content type="html"><![CDATA[<p>The following applet is triggered whenever there is a system environment message (%ENVMON) generated in the device&rsquo;s syslog. E.g high temperature, failed power supply etc. As soon as EEM &ldquo;sees&rdquo; %ENVMON messages, it will execute the below commands, capture the output and email it to me:</p>
<pre><code>event manager applet env_monitor authorization bypass
event syslog pattern &quot;%ENVMON&quot;
action 1.01 syslog msg &quot;------ EEM GENERATED MESSAGE ---------&quot;
action 1.02 syslog msg &quot;------ENVIRONMENT PROBLEM DETECTED----&quot;
action 1.03 cli command &quot;enable&quot;
action 1.04 set result &quot;&quot;
action 1.05 cli command &quot;show clock&quot;
action 1.06 append result &quot;$_cli_result&quot;
action 1.07 cli command &quot;show environment table&quot;
action 1.08 append result &quot;$_cli_result&quot;
action 2 mail server &quot;$_email_server&quot; to &quot;$_email_to&quot; from &quot;$_email_from&quot; subject &quot;Router Environmental Change Notification&quot; body &quot;$result&quot;
</code></pre><p><em>courtesy of Chris Partsenidis</em></p>
]]></content>
        </item>
        
        <item>
            <title>EEM monitor CPU</title>
            <link>https://netautogr.github.io/posts/2020/11/eem-monitor-cpu/</link>
            <pubDate>Thu, 26 Nov 2020 01:22:15 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/11/eem-monitor-cpu/</guid>
            <description>This applet monitors CPU usage. It&amp;rsquo;s extremely useful to monitor router or switch CPU usage. If the CPU usage exceeds 70% for more than 2 minutes, it will execute the commands below, capture the output and email it to me. Be mindful that the SNMP IODs might change depending on the IOS version or hardware device:
event manager applet cpu_monitor authorization bypass event snmp oid 1.3.6.1.4.1.9.9.109.1.1.1.1.3.1 get-type exact entry-op gt entry-val &amp;quot;70&amp;quot; entry-type value poll-interval 120 maxrun 20 action 1.</description>
            <content type="html"><![CDATA[<p>This applet monitors CPU usage. It&rsquo;s extremely useful to monitor router or switch CPU usage. If the CPU usage exceeds 70% for more than 2 minutes, it will execute the commands below, capture the output and email it to me. Be mindful that the SNMP IODs might change depending on the IOS version or hardware device:</p>
<pre><code>event manager applet cpu_monitor authorization bypass
event snmp oid 1.3.6.1.4.1.9.9.109.1.1.1.1.3.1 get-type exact entry-op gt entry-val &quot;70&quot; entry-type value poll-interval 120 maxrun 20
action 1.01 syslog msg &quot;------ EEM GENERATED MESSAGE ---------&quot;
action 1.02 syslog msg &quot;------HIGH CPU DETECTED----, CPU:$_snmp_oid_val %&quot;
action 1.03 cli command &quot;enable&quot;
action 1.04 set result &quot;&quot;
action 1.05 cli command &quot;show proc cpu sorted&quot;
action 1.06 append result &quot;$_cli_result&quot;
action 1.07 cli command &quot;show proc cpu history&quot;
action 1.08 append result &quot;$_cli_result&quot;
action 2 mail server &quot;$_email_server&quot; to &quot;$_email_to&quot; from &quot;$_email_from&quot; subject &quot;Router High CPU Usage Notification&quot; body &quot;$result&quot;
</code></pre><p><em>courtesy of Chris Partsenidis</em></p>
]]></content>
        </item>
        
        <item>
            <title>EΕΜ monitor track</title>
            <link>https://netautogr.github.io/posts/2020/11/e%CE%B5%CE%BC-monitor-track/</link>
            <pubDate>Thu, 26 Nov 2020 01:19:26 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/11/e%CE%B5%CE%BC-monitor-track/</guid>
            <description>This applet monitors &amp;ldquo;track 3&amp;rdquo; events which is configured to monitor a VM server via Ping. When &amp;lsquo;Track 3&amp;rsquo; is up, it will trigger this script, execute the show commands, capture the output and send them to me in an email:
event manager applet vm-2008-up authorization bypass event track 3 state up action 1.01 wait 5 action 1.02 syslog msg &amp;quot;------ IP SLA GENERATED MESSAGE ---------&amp;quot; action 1.03 syslog msg &amp;quot;------ VM-2008 Server UP ----&amp;quot; action 1.</description>
            <content type="html"><![CDATA[<p>This applet monitors &ldquo;track 3&rdquo; events which is configured to monitor a VM server via Ping. When &lsquo;Track 3&rsquo; is up, it will trigger this script, execute the show commands, capture the output and send them to me in an email:</p>
<pre><code>event manager applet vm-2008-up authorization bypass
event track 3 state up
action 1.01 wait 5
action 1.02 syslog msg &quot;------ IP SLA GENERATED MESSAGE ---------&quot;
action 1.03 syslog msg &quot;------ VM-2008 Server UP ----&quot;
action 1.04 cli command &quot;enable&quot;
action 1.05 set result &quot;&quot;
action 1.06 cli command &quot;show clock&quot;
action 1.07 append result &quot;$_cli_result&quot;
action 1.08 cli command &quot;show track 3 brief&quot;
action 1.09 append result &quot;$_cli_result&quot;
action 2 mail server &quot;$_email_server&quot; to &quot;$_email_to&quot; from &quot;$_email_from&quot; subject &quot;VM-2008 Server UP&quot; body &quot;$result&quot;
</code></pre><p><em>courtesy of Chris Partsenidis</em></p>
]]></content>
        </item>
        
        <item>
            <title>EEM send mail</title>
            <link>https://netautogr.github.io/posts/2020/11/eem-send-mail/</link>
            <pubDate>Thu, 26 Nov 2020 01:14:18 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/11/eem-send-mail/</guid>
            <description>Generic EEM script to send emails
event manager environment _email_to router-notifications@mydomain.com event manager environment _email_server 192.168.1.1 (This is your SMTP Server) event manager environment _email_from 2951@Office1 event manager environment _router_name 2951@Office1 event manager directory user policy &amp;quot;flash:/&amp;quot; courtesy of Chris Partsenidis</description>
            <content type="html"><![CDATA[<p>Generic EEM script to send emails</p>
<pre><code>event manager environment _email_to router-notifications@mydomain.com
event manager environment _email_server 192.168.1.1 (This is your SMTP Server)
event manager environment _email_from 2951@Office1
event manager environment _router_name 2951@Office1
event manager directory user policy &quot;flash:/&quot; 
</code></pre><p><em>courtesy of Chris Partsenidis</em></p>
]]></content>
        </item>
        
        <item>
            <title>Ansible</title>
            <link>https://netautogr.github.io/posts/2020/11/ansible/</link>
            <pubDate>Mon, 16 Nov 2020 14:25:30 +0200</pubDate>
            
            <guid>https://netautogr.github.io/posts/2020/11/ansible/</guid>
            <description>Η Ansible είναι ένα εργαλείο για configuration management στην λογική των Chef, Puppet και Salt. Ο βασικός λόγος της δημιουργίας της ήταν η ανάγκη για ένα agent-less automation framework και αυτό ήταν που οδήγησε στην υιοθέτησή της από μεγάλη μερίδα μηχανικών δικτύου που ήθελαν να αυτοματοποιήσουν τις εργασίες τους χωρίς όμως να έχουν την δυνατότητα εγκατάστασης agents στον εξοπλισμό τους. Παρακάτω γίνεται μια απόπειρα αποδελτίωσης των θετικών και των αρνητικών του εργαλείου ούτως ώστε η καθεμία να αποφασίσει μόνη της αν αξίζει να ασχοληθεί.</description>
            <content type="html"><![CDATA[<p>Η Ansible είναι ένα εργαλείο για configuration management στην λογική των Chef, Puppet και Salt. Ο βασικός λόγος της δημιουργίας της ήταν η ανάγκη για ένα agent-less automation framework και αυτό ήταν που οδήγησε στην υιοθέτησή της από μεγάλη μερίδα μηχανικών δικτύου που ήθελαν να αυτοματοποιήσουν τις εργασίες τους χωρίς όμως να έχουν την δυνατότητα εγκατάστασης agents στον εξοπλισμό τους.
Παρακάτω γίνεται μια απόπειρα αποδελτίωσης των θετικών και των αρνητικών του εργαλείου ούτως ώστε η καθεμία να αποφασίσει μόνη της αν αξίζει να ασχοληθεί.
TL;DR, η Ansible είναι μια καλή επιλογή για σχετικά αρχάριους στον χώρο του αυτοματισμού δικτύων με σχετικά ήπια καμπύλη εκμάθησης. Είναι επαρκής για απλές επαναλαμβανόμενες δουλειές αλλά αργή και ανίκανη να φέρει εις πέρας πολύπλοκα tasks.</p>
<h2 id="θετικά">Θετικά:</h2>
<ul>
<li><strong>Agentless</strong>: δεν απαιτείται εγκατάσταση agent στον εξοπλισμό - η σύνδεση σε δικτυακά μηχανήματα συνήθως γίνεται μέσω SSH.</li>
<li><strong>Παραλληλισμός</strong>: το ίδιο task μπορεί να τρέχει παράλληλα σε πολλαπλά hosts.</li>
<li><strong>Inventory &amp; variable inheritance</strong>: ο μηχανισμός με τον οποίο η Ansible ομαδοποιεί hosts και μοιράζεται μεταβλητές μεταξύ τους είναι πολύ ισχυρός και επεκτάσιμος. Αυτό την κάνει καλή επιλογή για πολύπλοκα περιβάλλοντα με πολλαπλά sites, prod/dev/test segments, κτλ.</li>
<li>Ecosystem: υπάρχει μεγάλος πλούτος από libraries (modules, roles, collections στην «διάλεκτο» της Ansible) που κάνουν εύκολη την δουλειά του administrator.</li>
</ul>
<h2 id="ούτε-κρύο-ούτε-ζέστη">Ούτε κρύο, ούτε ζέστη:</h2>
<ul>
<li><strong>DSL</strong>: Η Ansible «μιλάει» μια δική της γλώσσα (Domain Specific Language) που πατάει πάνω στην YAML. Από την μία, αυτό την κάνει αρκετά πιο απλή στην κατανόηση από τους ανθρώπους που δεν έχουν έκθεση σε αρχές προγραμματισμού. Από την άλλη, αυτό την κάνει αρκετά πιο περιοριστική για τους ανθρώπους που σκαμπάζουν. Επιπλέον, ένα κοινό επιχείρημα κατά των διαφόρων DSLs (Ansible, Terraform, etc) είναι πως, αντί να μαθαίνεις να γράφεις μια proper γλώσσα προγραμματισμού, μαθαίνει μια proprietary γλώσσα με de-facto περιορισμένο scope. Έκαστος εφ’ ω ετάχθη…</li>
<li><strong>Break-out to Python</strong>: Στο σημείο που ζορίζει το πράγμα και η Ansible δεν μπορεί να κάνει τα μαγκαϊβεριλίκια που θέλεις, κάνεις break-out σε Python. Τα θετικά/αρνητικά του συγκεκριμένου fact είναι άσκηση για το σπίτι…</li>
<li><strong>Delivery mechanism</strong>: Το GUI add-on (AWX) είναι ένας good-enough μηχανισμός για delivery.</li>
</ul>
<h2 id="αρνητικά-της-ansible">Αρνητικά της Ansible:</h2>
<ul>
<li><strong>SLOWWW</strong>: Είναι αργή! Ακόμη και αν φτάσεις στο σημείο να κάνεις τα πιο advanced κόλπα (forks, strategies, async) η Ansible παραμένει πολύ αργή!!!</li>
<li><strong>No event-driven mechanism</strong>: Δεν έχει μηχανισμό για event-driven automation.</li>
<li><strong>Complex tasks</strong>: Είναι απαράδεκτη για complex tasks με πολύ περιορισμένες δυνατότητες για loops, conditionals και παρόμοια structures.</li>
</ul>
]]></content>
        </item>
        
    </channel>
</rss>
