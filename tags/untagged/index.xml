<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>untagged on Network Automation GR</title>
    <link>https://netautogr.github.io/tags/untagged/</link>
    <description>Recent content in untagged on Network Automation GR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Oct 2025 19:21:01 +0300</lastBuildDate>
    
	<atom:link href="https://netautogr.github.io/tags/untagged/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Network Simulation Tools for Labs</title>
      <link>https://netautogr.github.io/posts/2025/10/introduction-to-network-simulation-tools-for-labs/</link>
      <pubDate>Fri, 24 Oct 2025 19:21:01 +0300</pubDate>
      
      <guid>https://netautogr.github.io/posts/2025/10/introduction-to-network-simulation-tools-for-labs/</guid>
      <description>Εισαγωγή Το post αυτό κάνει μια διπλή προσπάθεια:
 Να περιγράψει το τοπίο γύρω από το Network Sumulation και τις ανάγκες που μπορεί να καλύψει για network labs και όχι μόνο Να επαναφέρει το ρυθμό της παραγωγής περιοχομένου της ομάδας για το Network Automation σε ένα κύκλο λίγο πιο συχνό από τέσσερα χρόνια (τελευταίο post ήταν το 2021)  Network Simulation Τί είναι; Είναι η προσπάθεια να παράγουμε με ψηφιακό τρόπο μια δικτυακή τοπολογία όπου ψηφιακοί κόμβοι αναπαράγουν τη συμπεριφορά πραγματικών δικτυακών κόμβων όπως routers και switches αλλά και system hosts αν χρειάζεται.</description>
    </item>
    
    <item>
      <title>Introduction to PyATS</title>
      <link>https://netautogr.github.io/posts/2021/12/introduction-to-pyats/</link>
      <pubDate>Sat, 18 Dec 2021 00:55:02 +0200</pubDate>
      
      <guid>https://netautogr.github.io/posts/2021/12/introduction-to-pyats/</guid>
      <description>Εισαγωγή Το PyATS είναι ένα software framework για την κατασκευή αυτόματων διαδικασιών ελέγχου για δικτυακές συσκευές, ή όπως λέει η Cisco, ένα ολοκληρωμένο οικοσύστημα αυτοματισμού και δοκιμών, προσφέροντας όλα τα εργαλεία για τις καθημερινές DevOps εργασίες των μηχανικών δικτύων, δίνοντας εργαλεία είτε για τη γραμμή εντολών, είτε με τη χρήση libraries, είτε μέσω ενός σύγχρονου GUI Dashboard.
Είναι εσωτερικό εργαλείο της Cisco εδώ και 10 χρόνια (2012) για την δοκιμή των προϊόντων και συστημάτων τους, το οποίο αποφάσισαν να διαθέσουν στο ευρύ κοινό από το 2017.</description>
    </item>
    
    <item>
      <title>Jumpstart your Python Learning</title>
      <link>https://netautogr.github.io/posts/2021/12/jumpstart-your-python-learning/</link>
      <pubDate>Fri, 10 Dec 2021 08:20:22 +0200</pubDate>
      
      <guid>https://netautogr.github.io/posts/2021/12/jumpstart-your-python-learning/</guid>
      <description>Γενικά Το βασικό θέμα του παρόντος post είναι πως να ξεκινήσει κανείς να μαθαίνει Python (με οποιοδήποτε τρόπο). Τα παρακάτω προέκυψαν από συζητήσεις μελών μας στο LinkedIn, εσωτερικές συζητήσεις μέσα στην κοινότητα και συλλογή από online resources. Αφορμή υπήρξαν μια ερώτηση προερχόμενη εκτός της κοινότητας για εκμάθηση Python για συγκεκριμένο πακέτο Business Intelligence και ερώτηση μέλους ποιο είναι το καταλληλότερο σημείο εκκίνησης για εκμάθηση Python, πιθανώς ξεκινώντας από το μηδέν.</description>
    </item>
    
    <item>
      <title>Python_Vs_Ansible skirmish</title>
      <link>https://netautogr.github.io/posts/2021/12/python_vs_ansible-skirmish/</link>
      <pubDate>Fri, 10 Dec 2021 00:29:41 +0200</pubDate>
      
      <guid>https://netautogr.github.io/posts/2021/12/python_vs_ansible-skirmish/</guid>
      <description>Συζήτηση Η παρακάτω συζήτηση έγινε ένα απόγευμα στην κοινότητα μας μεταξύ του Πέτρου και του Νίκου (οποιαδήποτε ομοιότητα ή συσχετισμός με υπαρκτά πρόσωπα ενδεχομένως και να είναι συμπτωματική).
Πέτρος:
Εχω ξεκινήσει το ταξίδι μου και εγώ για DevNet &amp;amp; Automation. Παντού βλέπω ότι συγκρίνουν την python vs Ansible. Αφού δεν ειναι τα ιδια, γιατι αυτη η σύγκριση; Καταλαβαινω να συγκρινουν:
 Python vs Java Python vs C or C++  Μπορειτε να με βοηθήσετε ωστε να καταλαβω και εγω;</description>
    </item>
    
    <item>
      <title>Introduction to jinja2</title>
      <link>https://netautogr.github.io/posts/2021/12/introduction-to-jinja2/</link>
      <pubDate>Wed, 08 Dec 2021 17:28:27 +0200</pubDate>
      
      <guid>https://netautogr.github.io/posts/2021/12/introduction-to-jinja2/</guid>
      <description>Γενικά Ο σκοπός του παρόντος άρθρου είναι να φέρει τον αναγνώστη σε μια πρώτη επαφή με τη Jinja2 και τις εφαρμογές της.
Τι είναι η Jinja2 Η Jinja2 είναι γλώσσα για μια γρήγορη, εκφραστική και επεκτάσιμη μηχανή προτύπων (templating engine) γραμμένη σε καθαρό python. Τα ειδικά σύμβολα θέσης στο πρότυπο επιτρέπουν την σύνταξη κώδικα παρόμοιου με την σύνταξη της Python και χρησιμοποιείται για την δημιουργία HTML,XML και άλλων γλωσσών σήμανσης (markup language).</description>
    </item>
    
    <item>
      <title>Introduction to Yang</title>
      <link>https://netautogr.github.io/posts/2021/09/introduction-to-yang/</link>
      <pubDate>Fri, 24 Sep 2021 01:12:57 +0300</pubDate>
      
      <guid>https://netautogr.github.io/posts/2021/09/introduction-to-yang/</guid>
      <description>Γενικά Πριν αρχίσουμε Ας ξεκαθαρίσουμε κάτι από την αρχή. Δεν είναι δυνατό σε ένα άρθρο να πούμε όλα όσα πρέπει να γνωρίζετε για τα Yang Data Models. Ακόμα και ο τίτλος &amp;ldquo;Introduction&amp;rdquo; δεν είναι ακριβής. Πιο σωστός θα ήταν το &amp;ldquo;Σημείο έναρξης για να προσεγγίσετε τα Yang Data Models&amp;rdquo; ή κάτι παρόμοιο. Σε πολλά σημεία παραλείπουμε πληροφορίες. Άλλα σημεία δεν τα αναφέρουμε καθόλου. Ο σκοπός είναι το παρόν άρθρο να είναι εύκολο στην ανάγνωση, να προσφέρει μια περίληψη και ένα σωστό σημείο εκκίνησης, από το οποίο θα μπορέσετε να εξερευνήσετε περισσότερο τα σημεία για τα οποία ενδιαφέρεστε περισσότερο.</description>
    </item>
    
    <item>
      <title>Introduction to git</title>
      <link>https://netautogr.github.io/posts/2021/05/introduction-to-git/</link>
      <pubDate>Mon, 17 May 2021 23:02:37 +0300</pubDate>
      
      <guid>https://netautogr.github.io/posts/2021/05/introduction-to-git/</guid>
      <description>Γενικά - Version Control Systems Τί είναι ένα VCS Ένα Version Control System (VCS) είναι ένα σύστημα που καταγράφει τις αλλαγές που πραγματοποιούνται σε κάποιο αρχείο ή σε ένα σύνολο από αρχεία στην διάρκεια του χρόνου. Επίσης μπορεί να πραγματοποιήσει ανάκληση προηγούμενων εκδόσεων του αρχείου αν αυτό απαιτηθεί. Ένα VCS σου επιτρέπει να επαναφέρεις κάποια αρχεία σε μια προηγούμενη κατάσταση, ένα ολόκληρο project σε μια προηγούμενη κατάσταση, να βλέπεις τις αλλαγές από προηγούμενες εκδόσεις, ποιος έκανε την τελευταία αλλαγή και ίσως προκάλεσε κάποια δυσλειτουργία και πολλά άλλα.</description>
    </item>
    
  </channel>
</rss>